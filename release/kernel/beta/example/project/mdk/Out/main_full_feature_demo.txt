; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\out\main_full_feature_demo.o --asm_dir=.\Out\ --list_dir=.\Out\ --depend=.\out\main_full_feature_demo.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,64,1,381,177,111 -I..\..\..\vsf -I..\..\usrapp\template -I..\..\..\vsf\utilities\compiler\arm\CMSIS\Core\Include -I..\..\usrapp\template\app_cfg -I.\RTE\Device\CMSDK_CM3 -I.\RTE\_tempalte_armv7-m_ac5 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\V2M-MPS2_CMx_BSP\1.7.0\Boards\ARM\V2M-MPS2\Common -IC:\Keil_v5\ARM\PACK\Keil\V2M-MPS2_CMx_BSP\1.7.0\Device\CMSDK_CM3\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DCMSDK_CM3 --enum_is_int --wchar32 --omf_browse=.\out\main_full_feature_demo.crf ..\..\usrapp\template\main_full_feature_demo.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;285    
;;;286    int main(void)
000000  b530              PUSH     {r4,r5,lr}
;;;287    {
000002  b085              SUB      sp,sp,#0x14
;;;288        static_task_instance(
;;;289            features_used(
;;;290                mem_sharable( using_grouped_evt; )
;;;291                mem_nonsharable(
;;;292                )
;;;293            )
;;;294        )
;;;295    
;;;296        vsf_stdio_init();
000004  f7fffffe          BL       vsf_stdio_init
;;;297        
;;;298    #if VSF_CFG_SYNC_EN == ENABLED
;;;299        // initialize adapter
;;;300        do {
;;;301            vsf_sem_init(&user_sem, 0);
000008  f64772ff          MOV      r2,#0x7fff
00000c  2100              MOVS     r1,#0
00000e  4819              LDR      r0,|L1.116|
000010  f7fffffe          BL       vsf_eda_sync_init
;;;302    
;;;303    #   if VSF_CFG_BMPEVT_EN == ENABLED
;;;304            init_grouped_evts(user_grouped_evts_t, &__user_grouped_evts, timer4_evt_msk);
000014  4817              LDR      r0,|L1.116|
000016  2310              MOVS     r3,#0x10
000018  2201              MOVS     r2,#1
00001a  4917              LDR      r1,|L1.120|
00001c  3060              ADDS     r0,r0,#0x60
00001e  f7fffffe          BL       grouped_evts_init
;;;305    
;;;306            init_vsf_task(bmevt_demo_t, &__bmevt_demo, vsf_priority_0);
000022  2214              MOVS     r2,#0x14
000024  4915              LDR      r1,|L1.124|
000026  4668              MOV      r0,sp
000028  f7fffffe          BL       __aeabi_memcpy4
00002c  4811              LDR      r0,|L1.116|
00002e  4669              MOV      r1,sp
000030  3010              ADDS     r0,r0,#0x10
000032  f7fffffe          BL       vsf_teda_init_ex
;;;307    #       if VSF_KERNEL_CFG_EDA_SUPPORT_PT == ENABLED
;;;308            do {
;;;309                static user_pt_bmpevt_demo_thread_t __pt_demo = {
;;;310                    .param = {
;;;311                        .mask = timer4_evt_msk,
;;;312                        .pgroup_evts = &__user_grouped_evts,
;;;313                    },
;;;314                };
;;;315                init_vsf_pt(user_pt_bmpevt_demo_thread_t, &__pt_demo, vsf_priority_inherit);
000036  4911              LDR      r1,|L1.124|
000038  2214              MOVS     r2,#0x14
00003a  3114              ADDS     r1,r1,#0x14
00003c  4668              MOV      r0,sp
00003e  f7fffffe          BL       __aeabi_memcpy4
000042  480d              LDR      r0,|L1.120|
000044  4669              MOV      r1,sp
000046  3008              ADDS     r0,r0,#8
000048  f7fffffe          BL       vsf_teda_init_ex
;;;316            } while(0);
;;;317    #       endif
;;;318    #   endif
;;;319        } while(0);
;;;320    #endif
;;;321        
;;;322    #if VSF_CFG_TIMER_EN == ENABLED
;;;323        for (int i = 0; i < dimof(__timer_example); i++) {
;;;324            init_vsf_task(  timer_example_t,                        //!< vst_task type
00004c  4d0c              LDR      r5,|L1.128|
00004e  2400              MOVS     r4,#0                 ;323
                  |L1.80|
000050  490a              LDR      r1,|L1.124|
000052  2214              MOVS     r2,#0x14
000054  3128              ADDS     r1,r1,#0x28
000056  4668              MOV      r0,sp
000058  f7fffffe          BL       __aeabi_memcpy4
00005c  eb051084          ADD      r0,r5,r4,LSL #6
000060  4669              MOV      r1,sp
000062  9002              STR      r0,[sp,#8]
000064  f7fffffe          BL       vsf_teda_init_ex
000068  1c64              ADDS     r4,r4,#1
00006a  2c05              CMP      r4,#5                 ;323
00006c  d3f0              BCC      |L1.80|
;;;325                            &__timer_example[i],                    //!< vsf_task object
;;;326                            vsf_priority_0,                         //!< priority
;;;327                            .target = &__timer_example[i]);         //!< target object (pthis)
;;;328        }
;;;329    #endif
;;;330    
;;;331    
;;;332    #if VSF_USE_KERNEL_THREAD_MODE == ENABLED
;;;333        do {
;;;334            static NO_INIT user_task_t __user_task;
;;;335    #   if VSF_CFG_SYNC_EN == ENABLED
;;;336            __user_task.param.psem = &user_sem;
;;;337    #   endif
;;;338            init_vsf_thread(user_task_t, &__user_task, vsf_priority_0);
;;;339        } while(0);
;;;340    #endif
;;;341    
;;;342    
;;;343    #if VSF_CFG_BMPEVT_EN == ENABLED && VSF_USE_KERNEL_THREAD_MODE == ENABLED
;;;344        while (1) {
;;;345            wait_for_all_timeout_ms(    &__user_grouped_evts, 
;;;346                                        all_evts_msk_of_user_grouped_evts_t &~timer4_evt_msk,
;;;347                                        200000) {
;;;348                //! when all the grouped events are set
;;;349                reset_grouped_evts( &__user_grouped_evts, 
;;;350                                    all_evts_msk_of_user_grouped_evts_t &~timer4_evt_msk);
;;;351                printf("\r\n--------------barrier--------------: \r\n");
;;;352                
;;;353                on_bmevt_timeout() {
;;;354                    //! when timeout happened
;;;355                    printf("\r\n============== barrier timeout ============: \r\n");
;;;356                }
;;;357            }
;;;358    
;;;359            vsf_delay_ms(1000);
;;;360        }
;;;361    #endif
;;;362    
;;;363    }
00006e  b005              ADD      sp,sp,#0x14
000070  2000              MOVS     r0,#0
000072  bd30              POP      {r4,r5,pc}
;;;364    
                          ENDP

                  |L1.116|
                          DCD      ||.bss.noinit||+0x140
                  |L1.120|
                          DCD      ||area_number.11||
                  |L1.124|
                          DCD      ||.constdata||
                  |L1.128|
                          DCD      ||.bss.noinit||

                          AREA ||i.vsf_pt_func_user_pt_bmpevt_demo_slave_t||, CODE, READONLY, ALIGN=2

                  vsf_pt_func_user_pt_bmpevt_demo_slave_t PROC
;;;220    
;;;221    static implement_vsf_pt(user_pt_bmpevt_demo_slave_t)
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;222    {
;;;223        vsf_pt_begin();
000004  68c1              LDR      r1,[r0,#0xc]
000006  f9900008          LDRSB    r0,[r0,#8]
00000a  b120              CBZ      r0,|L2.22|
00000c  2801              CMP      r0,#1
00000e  d004              BEQ      |L2.26|
000010  2802              CMP      r0,#2
000012  d127              BNE      |L2.100|
000014  e013              B        |L2.62|
                  |L2.22|
;;;224        
;;;225        vsf_pt_wait_until( wait_for_one(this.pgroup_evts, this.mask) );
000016  2001              MOVS     r0,#1
000018  7220              STRB     r0,[r4,#8]
                  |L2.26|
00001a  6908              LDR      r0,[r1,#0x10]
00001c  6008              STR      r0,[r1,#0]
00001e  2000              MOVS     r0,#0
000020  7108              STRB     r0,[r1,#4]
000022  f04f32ff          MOV      r2,#0xffffffff
000026  68c8              LDR      r0,[r1,#0xc]
000028  f7fffffe          BL       vsf_bmpevt_wait_for
00002c  2803              CMP      r0,#3
00002e  d001              BEQ      |L2.52|
000030  2801              CMP      r0,#1
000032  d11d              BNE      |L2.112|
                  |L2.52|
;;;226        printf("get timer4_evt in pt slave thread\r\n");
000034  a00f              ADR      r0,|L2.116|
000036  f7fffffe          BL       __2printf
;;;227            
;;;228        vsf_pt_wait_until( vsf_sem_pend_timeout_ms(&user_sem, 2000) );
00003a  2002              MOVS     r0,#2
00003c  7220              STRB     r0,[r4,#8]
                  |L2.62|
00003e  f44f60fa          MOV      r0,#0x7d0
000042  f7fffffe          BL       vsf_systimer_ms_to_tick
000046  4601              MOV      r1,r0
000048  4813              LDR      r0,|L2.152|
00004a  f7fffffe          BL       __vsf_sem_pend
00004e  2803              CMP      r0,#3
000050  d001              BEQ      |L2.86|
000052  2801              CMP      r0,#1
000054  d10c              BNE      |L2.112|
                  |L2.86|
;;;229            on_sem_timeout() {
000056  f7fffffe          BL       vsf_eda_get_cur_evt
00005a  2801              CMP      r0,#1
00005c  d006              BEQ      |L2.108|
;;;230                printf("get user sem TIMEOUT pt slave thread\r\n");
;;;231            } else {
;;;232                printf("get user sem in pt slave thread\r\n");
00005e  a00f              ADR      r0,|L2.156|
                  |L2.96|
000060  f7fffffe          BL       __2printf
                  |L2.100|
;;;233            }
;;;234    
;;;235        vsf_pt_end();
000064  e8bd4010          POP      {r4,lr}
000068  f7ffbffe          B.W      vsf_eda_return
                  |L2.108|
00006c  a014              ADR      r0,|L2.192|
00006e  e7f7              B        |L2.96|
                  |L2.112|
;;;236    }
000070  bd10              POP      {r4,pc}
;;;237    
                          ENDP

000072  0000              DCW      0x0000
                  |L2.116|
000074  67657420          DCB      "get timer4_evt in pt slave thread\r\n",0
000078  74696d65
00007c  72345f65
000080  76742069
000084  6e207074
000088  20736c61
00008c  76652074
000090  68726561
000094  640d0a00
                  |L2.152|
                          DCD      ||.bss.noinit||+0x140
                  |L2.156|
00009c  67657420          DCB      "get user sem in pt slave thread\r\n",0
0000a0  75736572
0000a4  2073656d
0000a8  20696e20
0000ac  70742073
0000b0  6c617665
0000b4  20746872
0000b8  6561640d
0000bc  0a00    
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L2.192|
0000c0  67657420          DCB      "get user sem TIMEOUT pt slave thread\r\n",0
0000c4  75736572
0000c8  2073656d
0000cc  2054494d
0000d0  454f5554
0000d4  20707420
0000d8  736c6176
0000dc  65207468
0000e0  72656164
0000e4  0d0a00  
0000e7  00                DCB      0

                          AREA ||i.vsf_pt_func_user_pt_bmpevt_demo_thread_t||, CODE, READONLY, ALIGN=2

                  vsf_pt_func_user_pt_bmpevt_demo_thread_t PROC
;;;239    
;;;240    static implement_vsf_pt(user_pt_bmpevt_demo_thread_t)
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;241    {
;;;242        vsf_pt_begin();
000004  68c4              LDR      r4,[r0,#0xc]
000006  f9900008          LDRSB    r0,[r0,#8]
;;;243    
;;;244        while (1) {
;;;245        
;;;246            this.slave.mask = this.mask;
;;;247            this.slave.pgroup_evts = this.pgroup_evts;
;;;248            vsf_pt_call_pt(user_pt_bmpevt_demo_slave_t, &this.slave);
;;;249        
;;;250            vsf_pt_wait_until( wait_for_one(this.pgroup_evts, this.mask) );
;;;251            printf("get timer4_evt in pt master thread\r\n");
;;;252                
;;;253            
;;;254            vsf_pt_wait_until( vsf_sem_pend_timeout_ms(&user_sem, 2000) );
00000a  f44f66fa          MOV      r6,#0x7d0
00000e  2806              CMP      r0,#6                 ;242
000010  d250              BCS      |L3.180|
000012  e8dff000          TBB      [pc,r0]               ;242
000016  0309              DCB      0x03,0x09
000018  13152840          DCB      0x13,0x15,0x28,0x40
                  |L3.28|
00001c  6920              LDR      r0,[r4,#0x10]         ;246
00001e  6260              STR      r0,[r4,#0x24]         ;247
000020  68e0              LDR      r0,[r4,#0xc]          ;247
000022  6220              STR      r0,[r4,#0x20]         ;248
000024  2001              MOVS     r0,#1                 ;248
000026  7228              STRB     r0,[r5,#8]            ;248
000028  f1040114          ADD      r1,r4,#0x14           ;248
00002c  4823              LDR      r0,|L3.188|
00002e  f7fffffe          BL       __vsf_eda_call_eda
000032  2800              CMP      r0,#0                 ;248
000034  d101              BNE      |L3.58|
000036  2002              MOVS     r0,#2                 ;248
000038  7228              STRB     r0,[r5,#8]            ;248
                  |L3.58|
;;;255                on_sem_timeout() {
;;;256                    printf("get user sem TIMEOUT pt master thread\r\n");
;;;257                } else {
;;;258                    printf("get user sem in pt master thread\r\n");
;;;259                }
;;;260            
;;;261            
;;;262            printf("delay start...\r\n");
;;;263            vsf_pt_wait_until( vsf_delay_ms(2000) ); 
;;;264            printf("delay completed...\r\n");
;;;265                
;;;266        }
;;;267    
;;;268        vsf_pt_end();
;;;269    }
00003a  bd70              POP      {r4-r6,pc}
00003c  2003              MOVS     r0,#3                 ;250
00003e  7228              STRB     r0,[r5,#8]            ;250
000040  6920              LDR      r0,[r4,#0x10]         ;250
000042  6020              STR      r0,[r4,#0]            ;250
000044  2000              MOVS     r0,#0                 ;250
000046  7120              STRB     r0,[r4,#4]            ;250
000048  f04f32ff          MOV      r2,#0xffffffff        ;250
00004c  4621              MOV      r1,r4                 ;250
00004e  68e0              LDR      r0,[r4,#0xc]          ;250
000050  f7fffffe          BL       vsf_bmpevt_wait_for
000054  2803              CMP      r0,#3                 ;250
000056  d001              BEQ      |L3.92|
000058  2801              CMP      r0,#1                 ;250
00005a  d1ee              BNE      |L3.58|
                  |L3.92|
00005c  a018              ADR      r0,|L3.192|
00005e  f7fffffe          BL       __2printf
000062  2004              MOVS     r0,#4                 ;254
000064  7228              STRB     r0,[r5,#8]            ;254
000066  4630              MOV      r0,r6                 ;254
000068  f7fffffe          BL       vsf_systimer_ms_to_tick
00006c  4601              MOV      r1,r0                 ;254
00006e  481e              LDR      r0,|L3.232|
000070  f7fffffe          BL       __vsf_sem_pend
000074  2803              CMP      r0,#3                 ;254
000076  d001              BEQ      |L3.124|
000078  2801              CMP      r0,#1                 ;254
00007a  d1de              BNE      |L3.58|
                  |L3.124|
00007c  f7fffffe          BL       vsf_eda_get_cur_evt
000080  2801              CMP      r0,#1                 ;255
000082  d015              BEQ      |L3.176|
000084  a019              ADR      r0,|L3.236|
000086  bf00              NOP                            ;258
                  |L3.136|
000088  f7fffffe          BL       __2printf
00008c  a020              ADR      r0,|L3.272|
00008e  f7fffffe          BL       __2printf
000092  2005              MOVS     r0,#5                 ;263
000094  7228              STRB     r0,[r5,#8]            ;263
000096  4630              MOV      r0,r6                 ;263
000098  f7fffffe          BL       vsf_systimer_ms_to_tick
00009c  f7fffffe          BL       __vsf_delay
0000a0  f5a07180          SUB      r1,r0,#0x100          ;263
0000a4  3905              SUBS     r1,#5                 ;263
0000a6  d1c8              BNE      |L3.58|
0000a8  a01e              ADR      r0,|L3.292|
0000aa  f7fffffe          BL       __2printf
0000ae  e7b5              B        |L3.28|
                  |L3.176|
0000b0  a022              ADR      r0,|L3.316|
0000b2  e7e9              B        |L3.136|
                  |L3.180|
0000b4  e8bd4070          POP      {r4-r6,lr}            ;268
0000b8  f7ffbffe          B.W      vsf_eda_return
;;;270    #endif
                          ENDP

                  |L3.188|
                          DCD      vsf_pt_func_user_pt_bmpevt_demo_slave_t
                  |L3.192|
0000c0  67657420          DCB      "get timer4_evt in pt master thread\r\n",0
0000c4  74696d65
0000c8  72345f65
0000cc  76742069
0000d0  6e207074
0000d4  206d6173
0000d8  74657220
0000dc  74687265
0000e0  61640d0a
0000e4  00      
0000e5  00                DCB      0
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L3.232|
                          DCD      ||.bss.noinit||+0x140
                  |L3.236|
0000ec  67657420          DCB      "get user sem in pt master thread\r\n",0
0000f0  75736572
0000f4  2073656d
0000f8  20696e20
0000fc  7074206d
000100  61737465
000104  72207468
000108  72656164
00010c  0d0a00  
00010f  00                DCB      0
                  |L3.272|
000110  64656c61          DCB      "delay start...\r\n",0
000114  79207374
000118  6172742e
00011c  2e2e0d0a
000120  00      
000121  00                DCB      0
000122  00                DCB      0
000123  00                DCB      0
                  |L3.292|
000124  64656c61          DCB      "delay completed...\r\n",0
000128  7920636f
00012c  6d706c65
000130  7465642e
000134  2e2e0d0a
000138  00      
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L3.316|
00013c  67657420          DCB      "get user sem TIMEOUT pt master thread\r\n",0
000140  75736572
000144  2073656d
000148  2054494d
00014c  454f5554
000150  20707420
000154  6d617374
000158  65722074
00015c  68726561
000160  640d0a00

                          AREA ||i.vsf_task_func_bmevt_demo_t||, CODE, READONLY, ALIGN=2

                  vsf_task_func_bmevt_demo_t PROC
;;;271    
;;;272    implement_vsf_task(bmevt_demo_t)
000000  b510              PUSH     {r4,lr}
;;;273    {
;;;274        vsf_task_begin();
;;;275        
;;;276        vsf_task_wait_until( wait_for_one(&__user_grouped_evts, timer4_evt_msk));
000002  68c1              LDR      r1,[r0,#0xc]
000004  2010              MOVS     r0,#0x10
000006  6008              STR      r0,[r1,#0]
000008  2000              MOVS     r0,#0
00000a  7108              STRB     r0,[r1,#4]
00000c  1e42              SUBS     r2,r0,#1
00000e  4807              LDR      r0,|L4.44|
000010  f7fffffe          BL       vsf_bmpevt_wait_for
000014  2803              CMP      r0,#3
000016  d003              BEQ      |L4.32|
000018  2801              CMP      r0,#1
00001a  d001              BEQ      |L4.32|
00001c  2002              MOVS     r0,#2
;;;277        printf("get timer 4 in eda task\r\n");
;;;278    
;;;279        vsf_task_end();
;;;280    }
00001e  bd10              POP      {r4,pc}
                  |L4.32|
000020  a003              ADR      r0,|L4.48|
000022  f7fffffe          BL       __2printf
000026  2001              MOVS     r0,#1                 ;279
000028  bd10              POP      {r4,pc}
;;;281    
                          ENDP

00002a  0000              DCW      0x0000
                  |L4.44|
                          DCD      ||.bss.noinit||+0x1a0
                  |L4.48|
000030  67657420          DCB      "get timer 4 in eda task\r\n",0
000034  74696d65
000038  72203420
00003c  696e2065
000040  64612074
000044  61736b0d
000048  0a00    
00004a  00                DCB      0
00004b  00                DCB      0

                          AREA ||i.vsf_task_func_timer_example_t||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  vsf_task_func_timer_example_t PROC
;;;146    
;;;147    static implement_vsf_task(timer_example_t)
000000  b570              PUSH     {r4-r6,lr}
000002  68c0              LDR      r0,[r0,#0xc]
;;;148    {
;;;149        vsf_task_begin();
;;;150        
;;;151        int index = (timer_example_t *)ptThis - __timer_example;
000004  4a0d              LDR      r2,|L5.60|
;;;152        int delay = 2000 * (1 + index);
000006  f5a17180          SUB      r1,r1,#0x100
00000a  1a80              SUBS     r0,r0,r2              ;151
00000c  1184              ASRS     r4,r0,#6              ;151
00000e  1c65              ADDS     r5,r4,#1
000010  f44f60fa          MOV      r0,#0x7d0
000014  4345              MULS     r5,r0,r5
000016  3901              SUBS     r1,#1
000018  d00a              BEQ      |L5.48|
;;;153        user_msg_t *pmsg;
;;;154    
;;;155    	switch (evt) {
00001a  2904              CMP      r1,#4
00001c  d10b              BNE      |L5.54|
;;;156        case VSF_EVT_TIMER:
;;;157            printf("%d: timer post\r\n ", index);
00001e  4621              MOV      r1,r4
000020  a007              ADR      r0,|L5.64|
000022  f7fffffe          BL       __2printf
;;;158    #if VSF_CFG_BMPEVT_EN == ENABLED
;;;159            set_grouped_evts( &__user_grouped_evts,  1 << (index + timer0_evt_idx));
000026  2101              MOVS     r1,#1
000028  40a1              LSLS     r1,r1,r4
00002a  480a              LDR      r0,|L5.84|
00002c  f7fffffe          BL       vsf_eda_bmpevt_set
                  |L5.48|
;;;160    #endif
;;;161        case VSF_EVT_INIT:
;;;162            vsf_teda_set_timer_ms(delay);
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       vsf_teda_set_timer_ms
                  |L5.54|
;;;163            break;
;;;164    	}
;;;165        
;;;166        return fsm_rt_wait_for_evt;
000036  2002              MOVS     r0,#2
;;;167        
;;;168        vsf_task_end();
;;;169    }
000038  bd70              POP      {r4-r6,pc}
;;;170    #endif
                          ENDP

00003a  0000              DCW      0x0000
                  |L5.60|
                          DCD      ||.bss.noinit||
                  |L5.64|
000040  25643a20          DCB      "%d: timer post\r\n ",0
000044  74696d65
000048  7220706f
00004c  73740d0a
000050  2000    
000052  00                DCB      0
000053  00                DCB      0
                  |L5.84|
                          DCD      ||.bss.noinit||+0x1a0

                          AREA ||.bss.noinit||, DATA, NOINIT, ALIGN=3

                  __timer_example
                          %        320
                  user_sem
                          %        16
                  __bmevt_demo
                          %        80
                  __user_grouped_evts
                          %        28

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      vsf_task_func_bmevt_demo_t
                          DCD      0x00000000
                          DCD      __bmevt_demo+0x40
                          DCD      0x00000000
000010  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      vsf_pt_func_user_pt_bmpevt_demo_thread_t
                          DCD      0xffffffff
                          DCD      __pt_demo+0x40
                          DCD      0x00000000
000024  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      vsf_task_func_timer_example_t
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000038  01000000          DCB      0x01,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  ||<Data1>||
                          DCD      vsf_eda_bmpevt_adapter_sync_op
                          DCD      0x00000020
                          DCD      0x00000000
                          %        44
                          DCD      user_sem

                          AREA ||area_number.11||, DATA, ALIGN=3

                          EXPORTAS ||area_number.11||, ||.data||
                  __adapters_of_user_grouped_evts_t
                          DCD      ||<Data1>||
                          DCD      0x00000000
                  __pt_demo
                          DCD      0x00000000
                          DCD      0x00000000
                          %        36
                          DCD      0x00000000
                          %        16
                          DCD      0x00000000
00004c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      __user_grouped_evts
                          DCD      0x00000010
                          %        20

;*** Start embedded assembler ***

#line 1 "..\\..\\usrapp\\template\\main_full_feature_demo.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___24_main_full_feature_demo_c_b12b86c8____REV16|
#line 468 "..\\..\\..\\vsf\\utilities\\compiler\\arm\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___24_main_full_feature_demo_c_b12b86c8____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___24_main_full_feature_demo_c_b12b86c8____REVSH|
#line 483
|__asm___24_main_full_feature_demo_c_b12b86c8____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___24_main_full_feature_demo_c_b12b86c8____RRX|
#line 670
|__asm___24_main_full_feature_demo_c_b12b86c8____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
